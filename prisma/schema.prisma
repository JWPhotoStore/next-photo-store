generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  stripeCustomerId String?
  accounts         Account[]
  orders           Order[]
  sessions         Session[]
}

model Order {
  id              String     @id @default(cuid())
  amount          Float
  currency        String
  status          String
  createdDate     DateTime   @default(now())
  paymentIntentID String?    @unique
  userEmail       String
  cartItems       CartItem[]
  user            User       @relation(fields: [userEmail], references: [email])
}

model CartItem {
  id              String  @id @default(cuid())
  name            String
  description     String?
  unit_amount     Float
  image           String?
  quantity        Float   @default(0)
  piID            String
  stripeProductId String
  order           Order   @relation(fields: [piID], references: [paymentIntentID])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
